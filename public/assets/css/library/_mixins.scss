/**
 * media queries
 * @param  {int} $width
 */
@mixin mq_max($width){
	@media only screen and (max-width: $width){@content;}
}
@mixin mq_min($width){
	@media only screen and (min-width: $width + 1){@content;}
}
@mixin mq_min_max($min_width,$max_width){
	@media only screen and (min-width: $min_width) and (max-width: $max_width){@content;}
}

/**
 * media queries
 * @param  {int} $height
 */

@mixin mq_max_h($height){
	@media only screen and (max-height: $height){@content;}
}
@mixin mq_min_h($height){
	@media only screen and (min-height: $height + 1){@content;}
}
@mixin mq_min_max_h($min_height, $max_height){
	@media only screen and (min-width: $min_height) and (max-width: $max_height){@content;}
}

/**
 * example array of z-indexes
 * should be placed in _vars.scss
 * @param  {string} $layer
 * @return {int}
 */
@function z($layer) {
	@return map-get($z-layers, $layer);
}


/**
 * form input placeholder for different engines
 */
@mixin placeholder{
	&::-webkit-input-placeholder {
		 @content;
	}
	&:-moz-placeholder {
		 @content;
	}
	&::-moz-placeholder {
		 @content;
	}
	&:-ms-input-placeholder {
		 @content;
	}
}


/**
 * colored overlay on top of elements
 * using pseudo elements
 * @param  {string} $pos      before OR after
 * @param  {string} $color    hex OR rgb(a)
 * @param  {int} $z_index: 0  z-index of pseudo element
 */
@mixin overlay($pos,$color,$z_index: 0,$opacity: .6) {
	&::#{$pos} {
		display: block;
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		opacity: $opacity;
		background-color: $color;
		z-index: $z_index;
	}
}


/**
 * make element center in parent
 * using absolute positioning
 * @param  {boolean} $vertical
 * @param  {boolean} $horizontal
 */
@mixin centered($vertical,$horizontal){
	position: absolute;
	@if($vertical and $horizontal){
		left: 50%;
		top:50%;
    transform: translate(-50%,-50%);
	}
	@elseif($vertical){
		left:50%;
    transform: translateX(-50%);
	}
	@elseif($horizontal){
		top:50%;
    transform: translateY(-50%);
	}
}


/**
 * set equal height and width
 */
@mixin square($size){
	height: $size;
	width: $size;
}